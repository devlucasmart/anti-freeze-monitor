# Sistema de Monitoramento Anti-Travamento

Um sistema robusto de monitoramento que detecta e resolve automaticamente travamentos do sistema, encerrando processos problem√°ticos que consomem recursos excessivos.

## üéØ Funcionalidades

### üö® Detec√ß√£o Inteligente de Travamentos
- **Monitoramento em tempo real** do estado do sistema
- **Detec√ß√£o autom√°tica** de travamentos baseada em:
  - Load average elevado (Linux)
  - Tempo de resposta do sistema
  - Uso excessivo de CPU/mem√≥ria
  - Testes de responsividade do sistema

### üîß Recupera√ß√£o Autom√°tica
- **Encerramento seguro** de processos problem√°ticos
- **Lista de prote√ß√£o** para processos cr√≠ticos do sistema
- **Libera√ß√£o autom√°tica** de cache de mem√≥ria
- **Notifica√ß√µes visuais** em tempo real
- **Logs detalhados** de todas as a√ß√µes

### üéõÔ∏è Configura√ß√£o Flex√≠vel
- **Thresholds personaliz√°veis** para CPU e mem√≥ria
- **Intervalos de verifica√ß√£o** ajust√°veis
- **Tempo de timeout** configur√°vel
- **Limite de processos** encerrados por vez
- **Modo daemon/servi√ßo** para execu√ß√£o em background

## üìÅ Estrutura do Projeto

```
anti-freeze-monitor/
‚îú‚îÄ‚îÄ README                     # Este arquivo
‚îú‚îÄ‚îÄ linux/                     # Scripts para Linux
‚îÇ   ‚îú‚îÄ‚îÄ anti-freeze-monitor.sh  # Script principal
‚îÇ   ‚îî‚îÄ‚îÄ README                  # Documenta√ß√£o espec√≠fica do Linux
‚îî‚îÄ‚îÄ windows/                    # Scripts para Windows
    ‚îú‚îÄ‚îÄ Anti-FreezeMonitor.ps1  # Script PowerShell principal
    ‚îú‚îÄ‚îÄ Anti-FreezeMonitor.bat  # Launcher batch
    ‚îú‚îÄ‚îÄ Install.ps1            # Script de instala√ß√£o
    ‚îî‚îÄ‚îÄ README-Windows.md       # Documenta√ß√£o espec√≠fica do Windows
```

## üêß Linux

### Requisitos
- Sistema Linux (Ubuntu/Debian, CentOS/RHEL, Fedora)
- Acesso root (sudo)
- Depend√™ncias instaladas automaticamente:
  - `bc` (calculadora de linha de comando)
  - `libnotify-bin` (notifica√ß√µes desktop)
  - `zenity` (di√°logos gr√°ficos)

### Instala√ß√£o e Uso

#### Execu√ß√£o Simples
```bash
# Torna o script execut√°vel
chmod +x linux/anti-freeze-monitor.sh

# Executa com notifica√ß√µes
sudo ./linux/anti-freeze-monitor.sh

# Executa sem notifica√ß√µes
sudo ./linux/anti-freeze-monitor.sh --no-notifications
```

#### Instala√ß√£o como Servi√ßo
```bash
# Instala depend√™ncias e cria servi√ßo systemd
sudo ./linux/anti-freeze-monitor.sh --install

# Inicia o servi√ßo
sudo systemctl start anti-freeze

# Verifica status
sudo systemctl status anti-freeze

# Para/reinicia
sudo systemctl stop anti-freeze
sudo systemctl restart anti-freeze
```

### Configura√ß√µes (Linux)
- **FREEZE_TIMEOUT**: 5s - Tempo para considerar travamento
- **CHECK_INTERVAL**: 1s - Intervalo entre verifica√ß√µes
- **CPU_THRESHOLD**: 80% - Limite de CPU para processos problem√°ticos
- **MEMORY_THRESHOLD**: 15% - Limite de mem√≥ria para processos problem√°ticos
- **MAX_PROCESSES_TO_KILL**: 3 - M√°ximo de processos encerrados por vez
- **LOG_FILE**: `/var/log/anti-freeze.log`

## ü™ü Windows

### Requisitos
- Windows 10/11 ou Windows Server 2016+
- PowerShell 5.1+ (j√° inclu√≠do no Windows)
- Privil√©gios de administrador

### Instala√ß√£o e Uso

#### Execu√ß√£o Manual
1. **Baixe** os arquivos para uma pasta
2. **Clique com bot√£o direito** em `Anti-FreezeMonitor.bat`
3. **Selecione** "Executar como administrador"
4. **Escolha** uma op√ß√£o do menu:
   - Monitoramento com notifica√ß√µes
   - Monitoramento sem notifica√ß√µes
   - Instala√ß√£o como servi√ßo

#### Execu√ß√£o via PowerShell
```powershell
# Execu√ß√£o normal
.\windows\Anti-FreezeMonitor.ps1

# Sem notifica√ß√µes
.\windows\Anti-FreezeMonitor.ps1 -NoNotifications

# Instala√ß√£o como servi√ßo
.\windows\Anti-FreezeMonitor.ps1 -Install
```

#### Instala√ß√£o como Servi√ßo
```powershell
# Via script batch (menu op√ß√£o 3)
.\windows\Anti-FreezeMonitor.bat

# Ou via PowerShell
.\windows\Install.ps1
```

### Configura√ß√µes (Windows)
- **FREEZE_TIMEOUT**: 5s - Tempo para considerar travamento
- **CHECK_INTERVAL**: 1s - Intervalo entre verifica√ß√µes
- **CPU_THRESHOLD**: 80% - Limite de CPU para processos problem√°ticos
- **MEMORY_THRESHOLD**: 15% - Limite de mem√≥ria para processos problem√°ticos
- **MAX_PROCESSES_TO_KILL**: 3 - M√°ximo de processos encerrados por vez
- **LOG_FILE**: `%TEMP%\anti-freeze.log`

## üõ°Ô∏è Processos Protegidos

### Linux
- `systemd`, `kernel`, `init`
- `ssh`, `NetworkManager`
- Outros processos cr√≠ticos do sistema

### Windows
- `System`, `csrss`, `winlogon`
- `services`, `lsass`, `explorer`
- `dwm`, `svchost`

## üìä Como Funciona

### 1. Detec√ß√£o de Travamento
O sistema monitora continuamente:
- **Load average** vs n√∫mero de CPUs (Linux)
- **Tempo de resposta** a comandos simples
- **Uso de CPU/mem√≥ria** dos processos
- **Responsividade** do sistema operacional

### 2. Identifica√ß√£o de Processos Problem√°ticos
Quando um travamento √© detectado:
- **Lista** processos com alto consumo de recursos
- **Filtra** processos protegidos (whitelist)
- **Ordena** por consumo de CPU e mem√≥ria
- **Seleciona** at√© X processos para encerramento

### 3. Recupera√ß√£o do Sistema
- **Encerra processos** graciosamente (SIGTERM/CloseMainWindow)
- **For√ßa encerramento** se necess√°rio (SIGKILL/Kill)
- **Libera cache** de mem√≥ria se n√£o houver processos para encerrar
- **Registra** todas as a√ß√µes nos logs
- **Notifica** o usu√°rio sobre as a√ß√µes realizadas

### 4. Monitoramento Cont√≠nuo
- **Aguarda** estabiliza√ß√£o do sistema
- **Reinicia** ciclo de monitoramento
- **Mant√©m** hist√≥rico nos logs
- **Previne** a√ß√µes muito frequentes

## üìù Logs

### Localiza√ß√£o
- **Linux**: `/var/log/anti-freeze.log`
- **Windows**: `%TEMP%\anti-freeze.log`

### Informa√ß√µes Registradas
- Timestamp de todas as a√ß√µes
- Detec√ß√µes de travamento
- Processos encerrados (PID, nome, CPU%, mem√≥ria%)
- Libera√ß√£o de cache
- Estat√≠sticas do sistema
- Erros e avisos

## üîß Personaliza√ß√£o

### Editando Configura√ß√µes
Abra o script e modifique as vari√°veis no topo:

**Linux** (`anti-freeze-monitor.sh`):
```bash
FREEZE_TIMEOUT=5          # Altere conforme necess√°rio
CPU_THRESHOLD=80          # 0-100%
MEMORY_THRESHOLD=15       # 0-100%
MAX_PROCESSES_TO_KILL=3   # N√∫mero de processos
```

**Windows** (`Anti-FreezeMonitor.ps1`):
```powershell
$FREEZE_TIMEOUT = 5          # Altere conforme necess√°rio
$CPU_THRESHOLD = 80          # 0-100%
$MEMORY_THRESHOLD = 15       # 0-100%
$MAX_PROCESSES_TO_KILL = 3   # N√∫mero de processos
```

### Adicionando Processos √† Whitelist
Edite a vari√°vel `WHITELIST`/`$WHITELIST` nos scripts.

## ‚ö†Ô∏è Avisos Importantes

1. **Execute sempre como administrador/root**
2. **Teste** as configura√ß√µes antes de usar em produ√ß√£o
3. **Monitore** os logs para verificar funcionamento
4. **Backup** de dados importantes antes de usar
5. **Configure** thresholds adequados para seu sistema

## üöÄ Casos de Uso

- **Servidores** com aplica√ß√µes que podem travar
- **Esta√ß√µes de trabalho** com software pesado
- **Sistemas de desenvolvimento** que executam builds longos
- **Ambientes** onde a estabilidade √© cr√≠tica
- **Sistemas remotos** que precisam de recupera√ß√£o autom√°tica

## üìû Suporte

- **Logs**: Sempre consulte os logs para diagn√≥stico
- **Configura√ß√µes**: Ajuste os thresholds conforme seu hardware
- **Processos**: Adicione aplica√ß√µes importantes √† whitelist
- **Testes**: Execute em modo manual antes de instalar como servi√ßo

---

**Desenvolvido para manter seus sistemas funcionando de forma confi√°vel e autom√°tica!** üöÄ